{
  "document_id": "doc_id",
  "extraction_policy": "keep_existing|replace",
  "error_handling": "ignore_extraction|ignore_document|raise_error",
  "resources": {
    "dictionaries": {
      "women_name": "names.json"
    },
    "landmark" : ["resources/consolidated_rules.json"]
  },
  "content_extraction": {
    "input_path": "raw_content.`parent`",
    "extractors": {
      "readability": [
        {
          "strict": "yes",
          "extraction_policy": "keep_existing|replace",
          "field_name": "content_strict"
        },
        {
          "strict": "no",
          "extraction_policy": "keep_existing|replace",
          "field_name": "content_relaxed"
        }
      ],
      "title": {
        "extraction_policy": "keep_existing|replace"
      },
      "landmark": {
        "field_name": "inferlink_extractions",
        "extraction_policy": "keep_existing|replace",
        "landmark_threshold": 0.5 
      }
    }
  },
  "data_extraction": [
    {
      "input_path": ["*.*.text.`parent`", "*.inferlink_extractions.*.text.`parent`"],
      "fields": {
        "name": {
          "extractors": {
            "extract_using_dictionary": {
              "config": {
                "dictionary": "women_name",
                "ngrams": 1,
                "joiner": " ",
                "pre_process": [
                  "x.lower()"
                ],
                "pre_filter": [
                  "x"
                ],
                "post_filter": [
                  "isinstance(x, basestring)"
                ]
              },
              "extraction_policy": "keep_existing|replace"
            },
            "extract_using_regex": {
              "config": {
                "include_context": "true",
                "regex": "(?:my[\\s]+name[\\s]+is[\\s]+([-a-z0-9@$!]+))",
                "regex_options": [
                  "IGNORECASE",
                  "S"
                ],
                "pre_filter": [
                  "x.replace('\n', '')",
                  "x.replace('\r', '')"
                ]
              },
              "extraction_policy": "keep_existing|replace"
            },
            "extract_from_landmark": {
              "config": {
                "fields": [
                  "inferlink_name",
                  "inferlink_name-1"
                ],
                "post_filter": [
                  "x.replace('\t', '')"
                ]
              },
              "extraction_policy": "keep_existing|replace"
            },
            "spacy": {
              "config": {
                "entity_type": [
                  "PER"
                ]
              },
              "extraction_policy": "keep_existing|replace"
            }
          }
        }
      }
    },
    {
      "input_path": ["content_relaxed.text.`parent`"],
      "fields": {
        "phone": {
          "extractors": {
            "extract_phone": {
              "extraction_policy": "keep_existing|replace"
            },
            "extract_from_landmark": {
              "config": {
                "fields": [
                  "inferlink_phone",
                  "inferlink_phone-1"
                ],
                "post_filter": [
                  "extract_phone"
                ]
              },
              "extraction_policy": "keep_existing|replace"
            }
          }
        }
      }
    }
  ],
  "kg_enhancement": {
    "input_path": "knowledge_graph.`parent`",
    "fields": {
      "populated_place": {
        "extractors": {
          "geonames_lookup": {
            "config" : {}
          }
        }
      }
    }
  }
}